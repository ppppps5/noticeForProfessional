<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="zenielm.zemos3.family.news">
    <!--  전문직 공지사항 게시판 개정 작업 2022-04-22 박수호  -->
	
	<!-- 전문직 공지사항 메인화면 최근 게시물 카운트 -->
    <select id="newsRecentCnt" parameterType="java.util.HashMap" resultType="java.lang.Integer">
    	/* zenielm.zemos3.family.news.newsRecentCnt */
	    
	    SELECT COUNT(*) AS CNT
		FROM ZM_BBSCTT
		WHERE 1=1 
		AND BBS_IDX = '124'
		AND DELETE_YN = 'N' 
		AND USE_YN = 'Y' 
		AND DATE_FORMAT(REG_DT, '%Y%m%d') >= DATE_FORMAT(NOW() - interval 3 day, '%Y%m%d')
		
	</select>
	
    <!-- 전문직 공지사항 권한 목록 조회 -->
    <select id="newsAuthList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* zenielm.zemos3.family.news.newsAuthList */
        
        SELECT
			 	 A.IDX 										AS BBS_IDX
			   , A.BBS_NM									AS BBS_NM
               , A.BBS_SE									AS BBS_SE
			   , A.BBS_SE_IDX								AS BBS_SE_IDX
			   , A.SECRET_TY								AS SECRET_TY
			   
			   , CASE 
			   		  WHEN A.BBS_SE = 'MAIN' 
			   		  THEN '메인' 
			   		  WHEN A.BBS_SE = 'ZEMOS' 
			   		  THEN D.ZEMOS_NM 
			   		  ELSE '' 
			   	  END 										AS BBS_SE_NM
			   
			   , CASE 
			   		  WHEN COUNT(
			   		  				CASE 
			   		  					 WHEN C.TRGET_TY = '1' 
			   		  					 THEN 1 
			   		  					 ELSE NULL 
			   		  				 END
			   		  			) > 0 
			   		  THEN 'N' 
			   		  WHEN COUNT(
			   		  				CASE 
			   		  					 WHEN B.TRGET_TY = '1' 
			   		  					 THEN 1 
			   		  					 ELSE NULL 
			   		  				 END
			   		  			) > 0 
			   		  THEN 'Y'
			    	  WHEN A.BBS_SE = 'ZEMOS' AND A.BBS_SE_IDX != IFNULL(#{myZemosIdx}, 0) 
			    	  THEN 'Y' 
			    	  ELSE 'N' 
			      END 										AS AUTH1_YN
			   
			   , CASE 
			   		  WHEN COUNT(
				   		 			 CASE 
				   		 			 	  WHEN C.TRGET_TY = '2' 
				   		 			 	  THEN 1 
				   		 			 	  ELSE NULL 
				   		 			  END
			   		 		    ) > 0 
			   		  THEN 'N' 
			   		  WHEN COUNT(
				   		 			 CASE 
				   		 			 	  WHEN B.TRGET_TY = '2' 
				   		 			 	  THEN 1 
				   		 			 	  ELSE NULL 
				   		 			  END
			   		 		    ) > 0 
			   		  THEN 'Y' 
			   		  ELSE 'N' 
			   	  END 										AS AUTH2_YN
			   
			   , CASE 
			   		  WHEN COUNT(
				   		 			 CASE 
				   		 			 	  WHEN C.TRGET_TY = '3' 
				   		 			 	  THEN 1 
				   		 			 	  ELSE NULL 
				   		 			  END
			   		 		    ) > 0 
			   		  THEN 'N' 
			   		  WHEN COUNT(
				   		 			 CASE 
				   		 			 	  WHEN B.TRGET_TY = '3' 
				   		 			 	  THEN 1 
				   		 			 	  ELSE NULL 
				   		 			  END
			   		 		    ) > 0 
			   		  THEN 'Y' 
			   		  ELSE 'N' 
			   	  END 										AS AUTH3_YN
			   
			   , CASE 
			   		  WHEN COUNT(
				   		 			 CASE 
				   		 			 	  WHEN C.TRGET_TY = '4' 
				   		 			 	  THEN 1 
				   		 			 	  ELSE NULL 
				   		 			  END
			   		 		    ) > 0 
			   		  THEN 'N' 
			   		  WHEN COUNT(
				   		 			 CASE 
				   		 			 	  WHEN B.TRGET_TY = '4' 
				   		 			 	  THEN 1 
				   		 			 	  ELSE NULL 
				   		 			  END
			   		 		    ) > 0 
			   		  THEN 'Y' 
			   		  ELSE 'N' 
			   	  END 										AS AUTH4_YN
			   
			   , CASE 
			   		  WHEN COUNT(
				   		 			 CASE 
				   		 			 	  WHEN C.TRGET_TY = '5' 
				   		 			 	  THEN 1 
				   		 			 	  ELSE NULL 
				   		 			  END
			   		 		    ) > 0 
			   		  THEN 'N' 
			   		  WHEN COUNT(
				   		 			 CASE 
				   		 			 	  WHEN B.TRGET_TY = '5' 
				   		 			 	  THEN 1 
				   		 			 	  ELSE NULL 
				   		 			  END
			   		 		    ) > 0 
			   		  THEN 'Y' 
			   		  ELSE 'N' 
			      END 										AS AUTH5_YN
			   
			   , CASE 
			   		  WHEN COUNT(
				   		 			 CASE 
				   		 			 	  WHEN C.TRGET_TY = '6' 
				   		 			 	  THEN 1 
				   		 			 	  ELSE NULL 
				   		 			  END
			   		 		    ) > 0 
			   		  THEN 'N' 
			   		  WHEN COUNT(
				   		 			 CASE 
				   		 			 	  WHEN B.TRGET_TY = '6' 
				   		 			 	  THEN 1 
				   		 			 	  ELSE NULL 
				   		 			  END
			   		 		    ) > 0 
			   		  THEN 'Y' 
			   		  ELSE 'N' 
			   	  END 										AS AUTH6_YN
			   
			   , Z.ZEMOS_NM
		  FROM ZM_BBS A
	LEFT OUTER JOIN ZM_ZEMOS Z 
			ON Z.IDX = A.BBS_SE_IDX 
		   AND A.BBS_SE = 'ZEMOS'
	LEFT OUTER JOIN (
						SELECT B.*
						  FROM ZM_BBS A
						 INNER JOIN ZM_BBS_TRGET B 
						 	ON B.BBS_IDX = A.IDX 
						   AND B.USE_YN = 'Y' 
						   AND B.TRGET_YN = 'Y'
						 WHERE 1=1
						   AND A.DELETE_YN = 'N'
						   AND A.USE_YN = 'Y'
						   AND A.BBS_SE = 'ZEMOS'
						   <choose>
						      <when test='zemosOwnerYn != null and zemosOwnerYn == "Y"'>
						      AND 1=1
						      </when>
			                  <when test="zemosList != null and zemosList.size != 0">
                              AND ( A.BBS_SE = 'MAIN'
                                    <foreach item="item" index="index" collection="zemosList" open="OR" separator="OR" close="">
										(A.BBS_SE = 'ZEMOS' AND A.BBS_SE_IDX = #{item.IDX})
									</foreach>
									<if test='myZemosIdx != null and myZemosIdx != ""'>
									    OR (A.BBS_SE = 'ZEMOS' AND A.BBS_SE_IDX = #{myZemosIdx})
									</if>
								  )
	                          </when>
							  <when test='myZemosIdx != null and myZemosIdx != ""'>
							  AND ( 
							  			 A.BBS_SE = 'MAIN'
									 OR (A.BBS_SE = 'ZEMOS' AND A.BBS_SE_IDX = #{myZemosIdx})
								  )
							  </when>
							  <otherwise>
							  AND A.BBS_SE = 'ZEMOS'
							  </otherwise>
						   </choose>
						   AND (
									(B.TRGET_SE = 'ALL')
								 OR (		
								 			B.TRGET_SE = 'CUSTWO' 
								 		AND A.BBS_SE = 'ZEMOS' 
								 		AND A.BBS_SE_IDX = IFNULL(#{myZemosIdx},3759) 
								 		AND B.TRGET_KEY = #{loginVO.bubin} 
								 		AND B.TRGET_KEY2 = #{loginVO.custCode} 
								 		AND B.TRGET_KEY3 = #{loginVO.custwoCode}
								 	)
								 OR (
								 			B.TRGET_SE = 'CUSTBR' 
								 		AND A.BBS_SE = 'ZEMOS' 
								 		AND A.BBS_SE_IDX = IFNULL(#{myZemosIdx},3759) 
								 		AND B.TRGET_KEY = #{loginVO.bubin} 
								 		AND B.TRGET_KEY2 = #{loginVO.custCode} 
								 		AND B.TRGET_KEY3 = #{loginVO.custwoCode} 
								 		AND B.TRGET_KEY4 = #{loginVO.custbrCode}
								 	)
								 OR (
								 			B.TRGET_SE = 'WRKPLC' 
								 		AND A.BBS_SE = 'ZEMOS' 
								 		AND A.BBS_SE_IDX = #{myZemosIdx} 
								 		AND B.TRGET_KEY = #{loginVO.zemosWrkplcIdx}
								 	)
								 OR (
								 			B.TRGET_SE = 'AUTH' 
								 		AND A.BBS_SE = 'ZEMOS' 
								 		AND (
								 				(A.BBS_SE_IDX = #{myZemosIdx} AND B.TRGET_KEY = #{loginVO.zemosAuth}) 
								 				OR 
								 				(A.BBS_SE_IDX != IFNULL(#{myZemosIdx}, 0) AND B.TRGET_KEY = '21000')
								 			)
								 	)
								 OR (
								 			B.TRGET_SE = 'SABUN'
								 		AND (
								 					A.BBS_SE = 'MAIN' 
								 				OR (A.BBS_SE = 'ZEMOS' AND A.BBS_SE_IDX = #{myZemosIdx})
								 			) 
								 		AND B.TRGET_KEY = #{loginVO.sabun}
								 	)
								 OR (
								 			B.TRGET_SE = 'IDX' 
								 		AND (
								 					A.BBS_SE = 'MAIN' 
								 				OR (A.BBS_SE = 'ZEMOS' AND A.BBS_SE_IDX = #{myZemosIdx})
								 			) 
								 		AND B.TRGET_KEY = #{loginVO.idx}
								 	)
								 OR (
								 			B.TRGET_SE = 'GROUP' 
								 		AND A.BBS_SE = 'ZEMOS' 
								 		AND A.BBS_SE_IDX = #{myZemosIdx} 
								 		AND B.TRGET_KEY = #{loginVO.bubin} 
								 		AND B.TRGET_KEY2 = #{loginVO.custCode} 
								 		AND B.TRGET_KEY3 = #{loginVO.zmCode}
								 	)
							   )
						   AND (
						   			   IFNULL(B.ZM_YN, 'N') = 'N' 
						   			OR (
						   						IFNULL(B.ZM_YN, 'N') = 'Y' 
						   					AND B.ZM_CODE = #{loginVO.zmCode}
						   			   )
						   	   )
					) B ON B.BBS_IDX = A.IDX
	LEFT OUTER JOIN (
						SELECT B.*
						  FROM ZM_BBS A
						 INNER JOIN ZM_BBS_TRGET B 
						 	ON B.BBS_IDX = A.IDX 
						   AND B.USE_YN = 'Y' 
						   AND B.TRGET_YN = 'N'
						 WHERE 1=1
						   AND A.DELETE_YN = 'N'
						   AND A.USE_YN = 'Y'
						   AND A.BBS_SE = 'ZEMOS'
						   
						   <choose>
						      <when test='zemosOwnerYn != null and zemosOwnerYn == "Y"'>
			                  AND 1=1
	                          </when>
	                          
		                      <when test="zemosList != null and zemosList.size != 0">
				              AND ( 
				              		A.BBS_SE = 'MAIN'
				              		
									<foreach item="item" index="index" collection="zemosList" open="OR" separator="OR" close="">
										(A.BBS_SE = 'ZEMOS' AND A.BBS_SE_IDX = #{item.IDX})
									</foreach>
									
									<if test='myZemosIdx != null and myZemosIdx != ""'>
									    OR (A.BBS_SE = 'ZEMOS' AND A.BBS_SE_IDX = #{myZemosIdx})
									</if>
									)
							  </when>
							  
							  <when test='myZemosIdx != null and myZemosIdx != ""'>
						      AND ( 
						    		    A.BBS_SE = 'MAIN'
							    	OR (A.BBS_SE = 'ZEMOS' AND A.BBS_SE_IDX = #{myZemosIdx})
							      )
							  </when>
							  
							  <otherwise>
							  AND A.BBS_SE = 'MAIN'
							  </otherwise>
						   </choose>
						   
						   AND (
									   (B.TRGET_SE = 'ALL')
									OR (
												B.TRGET_SE = 'CUSTWO' 
											AND A.BBS_SE = 'ZEMOS' 
											AND A.BBS_SE_IDX = #{myZemosIdx} 
											AND B.TRGET_KEY = #{loginVO.bubin} 
											AND B.TRGET_KEY2 = #{loginVO.custCode} 
											AND B.TRGET_KEY3 = #{loginVO.custwoCode}
									   )
									OR (
												B.TRGET_SE = 'CUSTBR' 
											AND A.BBS_SE = 'ZEMOS' 
											AND A.BBS_SE_IDX = #{myZemosIdx} 
											AND B.TRGET_KEY = #{loginVO.bubin} 
											AND B.TRGET_KEY2 = #{loginVO.custCode} 
											AND B.TRGET_KEY3 = #{loginVO.custwoCode} 
											AND B.TRGET_KEY4 = #{loginVO.custbrCode}
									   )
									OR (
												B.TRGET_SE = 'WRKPLC' 
											AND A.BBS_SE = 'ZEMOS' 
											AND A.BBS_SE_IDX = #{myZemosIdx} 
											AND B.TRGET_KEY = #{loginVO.zemosWrkplcIdx}
									   )
									OR (
												B.TRGET_SE = 'AUTH' 
											AND A.BBS_SE = 'ZEMOS' 
											AND (
													   (A.BBS_SE_IDX = #{myZemosIdx} AND B.TRGET_KEY = #{loginVO.zemosAuth}) 
													OR (A.BBS_SE_IDX != IFNULL(#{myZemosIdx}, 0) AND B.TRGET_KEY = '21000')
												)
									   )
									OR (
												B.TRGET_SE = 'SABUN' 
											AND (
													    A.BBS_SE = 'MAIN' 
													OR (A.BBS_SE = 'ZEMOS' AND A.BBS_SE_IDX = #{myZemosIdx})
												) 
											AND B.TRGET_KEY = #{loginVO.sabun})
									OR (
												 B.TRGET_SE = 'IDX' 
											AND (
														A.BBS_SE = 'MAIN' 
													OR (A.BBS_SE = 'ZEMOS' AND A.BBS_SE_IDX = #{myZemosIdx})
												) 
											AND B.TRGET_KEY = #{loginVO.idx}
									   )
									OR (
												B.TRGET_SE = 'GROUP' 
											AND A.BBS_SE = 'ZEMOS' 
											AND A.BBS_SE_IDX = #{myZemosIdx} 
											AND B.TRGET_KEY = #{loginVO.bubin} 
											AND B.TRGET_KEY2 = #{loginVO.custCode} 
											AND B.TRGET_KEY3 = #{loginVO.zmCode}
									   )
							   )
						   AND (
						   				IFNULL(B.ZM_YN, 'N') = 'N' 
						   			OR (IFNULL(B.ZM_YN, 'N') = 'Y' AND B.ZM_CODE = #{loginVO.zmCode})
						   	   )
					) C ON C.BBS_IDX = A.IDX
		 INNER JOIN ZM_ZEMOS D 
			ON A.BBS_SE = 'ZEMOS' 
		   AND A.BBS_SE_IDX = D.IDX
		   <if test='deleteNoCheck == null or deleteNoCheck == ""'>
		   AND D.DELETE_YN = 'N'
		   </if>
		 WHERE 1=1
		   AND A.DELETE_YN = 'N'
		   AND A.USE_YN = 'Y'
		   AND A.BBS_SE = 'ZEMOS'
		   AND A.BBS_NM != '건의사항'
		   <if test='bbsIdx != null and bbsIdx != ""'>
		   AND A.IDX = #{bbsIdx}
		   </if>
		   
		   <choose>
	            <when test='zemosOwnerYn != null and zemosOwnerYn == "Y"'>
				AND (
							A.BBS_SE = 'MAIN' 
						OR (A.BBS_SE = 'ZEMOS' AND D.IDX IS NOT NULL)
					)
				</when>
				
				<when test="zemosList != null and zemosList.size != 0">
				AND ( 
							 A.BBS_SE = 'MAIN'
						<foreach item="item" index="index" collection="zemosList" open="OR" separator="OR" close="">
							(A.BBS_SE = 'ZEMOS' AND A.BBS_SE_IDX = #{item.IDX})
						</foreach>
						
						<if test='myZemosIdx != null and myZemosIdx != ""'>
					    OR (A.BBS_SE = 'ZEMOS' AND A.BBS_SE_IDX = #{myZemosIdx} AND #{myZemosAuth} IN ('11000','12000','21000'))
						</if>
					)
				</when>
				
				<when test='myZemosIdx != null and myZemosIdx != ""'>
				AND ( 
							A.BBS_SE = 'MAIN'
					    OR (
					    			A.BBS_SE = 'ZEMOS' 
					    		AND A.BBS_SE_IDX = #{myZemosIdx} 
					    		AND #{myZemosAuth} IN ('11000','12000','21000')
					       )
					)
				</when>
				
				<otherwise>
				AND A.BBS_SE = 'MAIN'
				</otherwise>
			</choose>
			
			<if test='bbsListPopupSelectText != null and bbsListPopupSelectText != ""'>
		    	AND CONCAT(IFNULL(Z.ZEMOS_NM,''),IFNULL(A.BBS_NM,'')) LIKE CONCAT(CONCAT('%',#{bbsListPopupSelectText}),'%')
		    </if>
		    
			<if test='notice != null and notice != ""'>
		    AND A.BBS_NM = '공지사항'
		    
		    	<if test='zemosIdx != null and zemosIdx != ""'>
		    	AND A.BBS_SE_IDX = #{zemosIdx}
		    	</if>
		    
		    </if>
		    
		    <if test='notice == null or notice == ""'>
			    AND A.BBS_NM NOT IN ('공지사항','공통교육')
			</if>
			
		 GROUP BY  A.IDX
				  ,A.BBS_NM
				  ,A.BBS_SE
				  ,A.BBS_SE_IDX
				  ,D.ZEMOS_NM
		HAVING 'Y' = CASE 
						  WHEN COUNT(
						  			  CASE 
						  			  	   WHEN C.TRGET_TY = '1' 
						  			  	   THEN 1 
						  			  	   ELSE NULL 
						  			   END
						  			) > 0 
						  THEN 'N' 
						  
						  WHEN COUNT(
						  			  CASE 
						  			  	   WHEN B.TRGET_TY = '1' 
						  			  	   THEN 1 
						  			  	   ELSE NULL 
						  			   END
						  			) > 0 
						  THEN 'Y' 
						  
						  WHEN A.BBS_SE = 'ZEMOS' AND A.BBS_SE_IDX != IFNULL(#{myZemosIdx}, 0) 
						  THEN 'Y' 
						  
						  ELSE 'N' 
					  END
		 ORDER BY BBS_SE, BBS_SE_NM, BBS_NM
		 <if test='start != null and start != "" and limit != null and limit != ""'>
		 LIMIT ${start}, ${limit}
		 </if>
		
    </select>
    
    <!-- 전문직 공지사항 조회 -->
    <select id="newsSelect" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* zenielm.zemos3.family.news.newsSelect */
        
	        SELECT
	        		 A.*
	        	   , B.ZEMOS_NM		AS ZEMOS_NM
	          FROM ZM_BBS A
	    LEFT OUTER JOIN ZM_ZEMOS B 
	    		ON B.IDX = A.BBS_SE_IDX 
	    	   AND A.BBS_SE = 'ZEMOS'
	         WHERE 1=1
	           AND A.USE_YN = 'Y'
	           AND A.DELETE_YN = 'N'
	           AND A.IDX = #{idx}
        
    </select>
    
    <!-- 전문직 공지사항 조회 추가 (공지사항 읽음) -->
    <insert id="newsSelectInsert" parameterType="java.util.HashMap">
        /* zenielm.zemos3.family.news.newsSelectInsert */
        
        INSERT INTO ZM_BBSCTT_READ
        (
			  BBSCTT_IDX
    		, USER_IDX
    		, DELETE_YN
    		, REG_IDX
    		, REG_DT
    		, EDIT_IDX
    		, EDIT_DT
        )
        VALUES
        (
			  #{bbscttIdx}
			, #{userIdx}
			, 'N'
			, #{regIdx}
			, NOW()
			, #{editIdx}
			, NOW()
        )
        
    </insert>
    
    <!-- 전문직 공지사항 컨텐츠 목록 카운트 -->
    <select id="newscttListCnt" parameterType="java.util.HashMap" resultType="java.lang.Integer">
        /* zenielm.zemos3.family.news.newscttListCnt */
        
        <!--  
        SELECT COUNT(*) AS CNT
        FROM ZM_BBSCTT A
    	LEFT OUTER JOIN ZM_USER B ON B.IDX = A.REG_IDX
    	WHERE BBS_IDX = '124'
		-->
		
		SELECT COUNT(*) AS CNT
		  FROM ZM_BBSCTT A
		 WHERE 1=1
		   AND A.BBS_IDX = '124'
		   AND A.DELETE_YN = 'N'
		   AND A.USE_YN = 'Y'
		   AND ( A.PARENT_IDX IS NULL OR A.IDX = A.PARENT_IDX )
		   
		    	
    </select>
    
    <!-- 전문직 공지사항 컨텐츠 리스트 조회 -->
    <select id="newscttList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* zenielm.zemos3.family.news.newscttList */
		  SELECT
             	 A.IDX				AS IDX
			   , A.BBS_IDX			AS BBS_IDX
			   , A.BBSCTT_TITLE		AS BBSCTT_TITLE
			   , A.BBSCTT_MVPTAG	AS BBSCTT_MVPTAG
			   , A.NOTICE_YN		AS NOTICE_YN
			   , A.NOTICE_START		AS NOTICE_START
			   , A.NOTICE_END		AS NOTICE_END
			   , A.REG_IDX			AS REG_IDX
			   , DATE_FORMAT(A.REG_DT, "%Y-%m-%d %T") 	AS REG_DT
			   , A.EDIT_IDX			AS EDIT_IDX
			   , A.EDIT_DT			AS EDIT_DT
			   , B.NAME				AS REG_NAME
		  FROM ZM_BBSCTT A
	LEFT OUTER JOIN ZM_USER B 
			ON B.IDX = A.REG_IDX 
		 WHERE 1=1
		   AND A.BBS_IDX = '124'
		   AND A.DELETE_YN = 'N'
		   AND A.USE_YN = 'Y'
		   AND ( A.PARENT_IDX IS NULL OR A.IDX = A.PARENT_IDX )
		   <if test='selectText != null and selectText != ""'>
		   AND (
					A.BBSCTT_TITLE LIKE CONCAT(CONCAT('%', #{selectText}), '%')
				 OR A.BBSCTT_CONTENTS LIKE CONCAT(CONCAT('%', #{selectText}), '%') 
			   )
		   </if>
		 ORDER BY A.IDX DESC
		 <if test='start != null and start != "" and limit != null and limit != ""'>
		 LIMIT ${start}, ${limit}
		 </if>
	 
    </select>
    
    <!-- 전문진 공지사항 컨텐츠 조회 -->
    <select id="newscttSelect" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* zenielm.zemos3.family.news.newscttSelect */
		 
		  SELECT
             	 A.IDX									AS IDX
			   , A.BBS_IDX								AS BBS_IDX
			   , A.BBSCTT_TITLE							AS BBSCTT_TITLE
			   , A.BBSCTT_CONTENTS						AS BBSCTT_CONTENTS
			   , A.BBSCTT_MVPTAG						AS BBSCTT_MVPTAG
			   , A.NOTICE_YN							AS NOTICE_YN
			   , A.NOTICE_START							AS NOTICE_START
			   , A.NOTICE_END							AS NOTICE_END
			   , A.EXTRA4								AS USER_FILE
			   , A.EXTRA5								AS USER_FILE_REAL_NAME
			   , A.REG_IDX								AS REG_IDX
			   , DATE_FORMAT(A.REG_DT, "%Y-%m-%d %T") 	AS REG_DT
			   , A.EDIT_IDX								AS EDIT_IDX
			   , A.EDIT_DT								AS EDIT_DT
			   , B.NAME 								AS REG_NAME
		  FROM ZM_BBSCTT A
	LEFT OUTER JOIN ZM_USER B 
			ON B.IDX = A.REG_IDX 
		 WHERE 1=1
		   AND A.IDX = #{idx}
		   
    </select>
    
    <!-- 전문직 공지사항 컨텐츠 추가 -->
    <insert id="newscttInsert" parameterType="java.util.HashMap">
        /* zenielm.zemos3.family.news.newscttInsert */
        
        INSERT INTO ZM_BBSCTT
        (
        	  BBS_IDX
			, BBSCTT_TITLE
			, BBSCTT_CONTENTS
			, BBSCTT_MVPTAG
			, SECRET_YN
			, NOTICE_YN
			, NOTICE_START
			, NOTICE_END
			, NTCN_YN
			, ENFRC_NTCN_YN
			, USE_YN
			, DELETE_YN
			, EXTRA1
			, EXTRA2
			, EXTRA3
			, EXTRA4
			, EXTRA5
			, REG_YMD
			, REG_HMS
			, REG_IDX
			, REG_DT
			, EDIT_IDX
			, EDIT_DT
        )
        VALUES
        (
			  #{bbsIdx}
			, #{bbscttTitle}
			, #{bbscttContents}
			, #{bbscttMvptag}
			, #{secretYn}
			, #{noticeYn}
			, #{noticeStart}
			, #{noticeEnd}
			, #{ntcnYn}
			, #{enfrcNtcnYn}
			, #{useYn}
			, #{deleteYn}
			, #{extra1}
			, #{extra2}
			, #{extra3}
			, #{extra4}
			, #{extra5}
			, #{regYmd}
			, #{regHms}
			, #{regIdx}
			, NOW()
			, #{editIdx}
			, NOW()
        )
        
    </insert>
    
    <!-- 전문직 공지사항 컨텐츠 수정 -->
    <update id="newscttUpdate" parameterType="java.util.HashMap">
        /* zenielm.zemos3.family.news.newscttUpdate */
        
        UPDATE ZM_BBSCTT
        	
		<set>
			BBS_IDX = '124',
		    <!--  <if test='bbsIdx != null and bbsIdx != ""'>BBS_IDX = #{bbsIdx},</if> -->
			<if test='bbscttTitle != null and bbscttTitle != ""'>BBSCTT_TITLE = #{bbscttTitle},</if>
			<if test='bbscttContents != null and bbscttContents != ""'>BBSCTT_CONTENTS = #{bbscttContents},</if>
			<if test='bbscttMvptag != null and bbscttMvptag != ""'>BBSCTT_MVPTAG = #{bbscttMvptag},</if>
			<if test='secretYn != null and secretYn != ""'>SECRET_YN = #{secretYn},</if>
			<if test='noticeYn != null and noticeYn != ""'>NOTICE_YN = #{noticeYn},</if>
			<if test='noticeStart != null and noticeStart != ""'>NOTICE_START = #{noticeStart},</if>
			<if test='noticeEnd != null and noticeEnd != ""'>NOTICE_END = #{noticeEnd},</if>
			<if test='ntcnYn != null and ntcnYn != ""'>NTCN_YN = #{ntcnYn},</if>
			<if test='enfrcNtcnYn != null and enfrcNtcnYn != ""'>ENFRC_NTCN_YN = #{enfrcNtcnYn},</if>
			<if test='useYn != null and useYn != ""'>USE_YN = #{useYn},</if>
			<if test='deleteYn != null and deleteYn != ""'>DELETE_YN = #{deleteYn},</if>
			<if test='parentIdx != null and parentIdx != ""'>PARENT_IDX = #{parentIdx},</if>
			<if test='extra2 != null and extra2 != ""'>EXTRA2 = #{extra2},</if>
			<if test='extra3 != null and extra3 != ""'>EXTRA3 = #{extra3},</if>
			<if test='extra4 != null and extra4 != ""'>EXTRA4 = #{extra4},</if>
			<if test='extra5 != null and extra5 != ""'>EXTRA5 = #{extra5},</if>
			<if test='editIdx != null and editIdx != ""'>EDIT_IDX = #{editIdx},</if>
			EDIT_DT = NOW()
			
		</set>
        WHERE 1=1
          AND IDX = #{idx}
          <if test='updateYn != null and updateYn == "Y"'>
           OR ( 
           			PARENT_IDX IS NOT NULL 
           		AND PARENT_IDX = (
           							SELECT T.PARENT_IDX 
           							  FROM (
           							  			SELECT PARENT_IDX 
           							  			  FROM ZM_BBSCTT 
           							  			 WHERE 1=1
           							  			   AND IDX = #{idx}
           							  	   ) AS T
           						 ) 
           	  )
          </if>
        
    </update>
    
    <!-- 전문직 공지사항 조회수 추가 -->
    <insert id="newscttReadInsert" parameterType="java.util.HashMap">
        /* zenielm.zemos3.family.news.newscttReadInsert */
        
        INSERT INTO ZM_BBSCTT_READ
        (
			  BBSCTT_IDX
			, USER_IDX
			, DELETE_YN
			, REG_IDX
			, REG_DT
			, EDIT_IDX
			, EDIT_DT
        )
        VALUES
        (
			  #{bbscttIdx}
			, #{userIdx}
			, 'N'
			, #{regIdx}
			, NOW()
			, #{editIdx}
			, NOW()
        )
        
    </insert>
    
    <!-- 전문직 공지사항 조회자 목록 조회 -->
    <select id="newscttReadList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* zenielm.zemos3.family.news.newscttReadList */
        
        SELECT
            	 A.*
               , B.NAME					AS NAME
               , (SELECT C.BU_NAME FROM ZEMOS_FA_BUBIN C WHERE 1=1 AND C.BUBIN = B.BUBIN) AS BU_NAME
               , B.CUST_NAME AS CUST_NAME
               , B.CUSTWO_NAME AS CUSTWO_NAME
		  FROM ZM_BBSCTT_READ A
		 INNER JOIN ZM_USER B 
		 	ON B.IDX = A.USER_IDX
		 WHERE 1=1
		   AND A.DELETE_YN = 'N'
		   AND A.BBSCTT_IDX = #{bbscttIdx}
		 GROUP BY A.USER_IDX
		 ORDER BY B.BUBIN,B.CUST_NAME,B.CUSTWO_NAME,B.NAME
		
    </select>
    
    <!-- 전문직 공지사항 댓글 목록 조회 -->
    <select id="newscttAnswerList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* zenielm.zemos3.family.news.newscttAnswerList */
        
        SELECT
            	 A.*
               , B.NAME 												AS USER_NAME
               ,
               	 CASE
					  WHEN DATE_FORMAT(A.REG_DT, '%Y%m%d%H%i') >= DATE_FORMAT(NOW() - interval 5 minute, '%Y%m%d%H%i') 
					  THEN '지금'
					  WHEN DATE_FORMAT(A.REG_DT, '%Y%m%d%H') = DATE_FORMAT(NOW(), '%Y%m%d%H') 
					  THEN CONCAT(DATE_FORMAT(NOW(), '%Y%m%d%H%i') - DATE_FORMAT(A.REG_DT, '%Y%m%d%H%i'), '분 전')
					  WHEN DATE_FORMAT(A.REG_DT, '%Y%m%d') = DATE_FORMAT(NOW(), '%Y%m%d') 
					  THEN DATE_FORMAT(A.REG_DT, '%H시 %i분')
					  WHEN DATE_FORMAT(A.REG_DT, '%Y') = DATE_FORMAT(NOW(), '%Y') 
					  THEN DATE_FORMAT(A.REG_DT, '%m월 %d일 %H시 %i분')
					  ELSE DATE_FORMAT(A.REG_DT, '%Y년 %m월 %d일 %H시%i분')
			 	  END 													AS REG_DT_TEXT
			   , 
			   	 CASE
					  WHEN DATE_FORMAT(A.REG_DT, '%Y%m%d') = DATE_FORMAT(NOW(), '%Y%m%d') 
					  THEN DATE_FORMAT(A.REG_DT, '%H시 %i분')
					  WHEN DATE_FORMAT(A.REG_DT, '%Y') = DATE_FORMAT(NOW(), '%Y') 
					  THEN DATE_FORMAT(A.REG_DT, '%m월 %d일 %H시 %i분')
					  ELSE DATE_FORMAT(A.REG_DT, '%Y년 %m월 %d일 %H시%i분')
			 	  END 													AS REG_DT_TEXT2
			   , DATE_FORMAT(A.REG_DT, '%Y년 %m월 %d일 %H시%i분') 		AS REG_DT_TEXT3
			   , DATE_FORMAT(A.REG_DT, '%Y-%m-%d %T') 					AS REG_DT_TEXT4
			   , DATE_FORMAT(A.REG_DT, '%Y.%m.%d') 						AS REG_DT_TEXT5
		  FROM ZM_BBSCTT_ANSWER A
	LEFT OUTER JOIN ZM_USER B 
			ON B.IDX = A.REG_IDX
		 WHERE 1=1
		   AND A.BBSCTT_IDX = #{bbscttIdx}
		   AND A.DELETE_YN = 'N'
		   AND A.USE_YN = 'Y'
		   <if test='lastIdx != null and lastIdx !=""'>
		   AND A.IDX > #{lastIdx}
		   </if>
		   <if test='idx != null and idx !=""'>
		   AND A.IDX = #{idx}
		   </if>
		 ORDER BY A.IDX
		
    </select>
    
    <!-- 전문직 공지사항 태그 리스트 조회 -->
    <select id="newscttTagList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
        /* zenielm.zemos3.family.news.newscttTagList */
        
        SELECT A.*
		  FROM ZM_BBSCTT_TAG A
		 WHERE 1=1
		   AND A.BBSCTT_IDX = #{bbscttIdx}
		   AND A.USE_YN = 'Y'
		   AND A.DELETE_YN = 'N'
		 ORDER BY A.IDX
		
    </select>
    
    <!-- 전문직 공지사항 태그 삭제 -->
    <delete id="newscttTagDeleteAll" parameterType="java.util.HashMap">
        /* zenielm.zemos3.family.news.newscttTagDeleteAll */
        
        DELETE 
          FROM ZM_BBSCTT_TAG
         WHERE 1=1
           AND BBSCTT_IDX = #{bbscttIdx}
        	OR ( 
        			BBSCTT_IDX = (
        							SELECT T.PARENT_IDX 
        							  FROM (
        							  			SELECT PARENT_IDX 
        							  			  FROM ZM_BBSCTT WHERE IDX = #{bbscttIdx}
        							  	   ) AS T
        						 ) 
        	   )
        
    </delete>
    
    <!-- 전문직 공지사항 태그 추가 -->
    <insert id="newscttTagInsert" parameterType="java.util.HashMap">
        /* zenielm.zemos3.family.news.newscttTagInsert */
        
        INSERT INTO ZM_BBSCTT_TAG
        (
			  BBSCTT_IDX
			, TAG_NM
			, USE_YN
			, DELETE_YN
			, REG_IDX
			, REG_DT
			, EDIT_IDX
			, EDIT_DT
        )
        VALUES
        (
			  #{bbscttIdx}
			, #{tagNm}
			, #{useYn}
			, 'N'
			, #{regIdx}
			, NOW()
			, #{regIdx}
			, NOW()
        )
        
    </insert>
    
    <!-- 전문직 공지사항 최대값 조회 -->
    <select id="newscttMaxIdx" parameterType="java.util.HashMap" resultType="java.lang.Integer">
        /* zenielm.zemos3.family.news.newscttMaxIdx */
        
        SELECT MAX(A.IDX) AS IDX
		  FROM ZM_BBSCTT A
		 WHERE A.REG_IDX = #{regIdx}
		
    </select>
    
</mapper>